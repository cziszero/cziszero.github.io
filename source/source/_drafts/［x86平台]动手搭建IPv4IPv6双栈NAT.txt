［x86平台］搭建IPv4/IPv6双栈NAT详细教程

对于初学Unix和计算机网络的同学而言，从零开始配置好NAPT66实在是太难了，铩羽而归的不在少数。为此，我新写了几个shell脚本，抛砖引玉，希望能给大家一点帮助。

一、准备工作
1、安装UBUNTU 10.04。
初学者若不想忍麻烦，切勿安装其他版本的操作系统。当然，NAPT66的目标是支持所有类Unix操作系统，我们也鼓励你用其他版本或其他发行版进行开发或测试。
2、取得IPv4/IPv6双栈接入条件。
确定在未安装NAPT66之前，你的电脑就可以访问IPv4和IPv6网络。如没有原生IPv6环境，可用北邮ISATAP隧道接入。我们提供了相应的脚本给你参考，up_isatap.sh，down_isatap.sh。如果你使用了隧道，IPv4和IPv6的interface就不一样了，注意修改up_napt66.sh及down_napt66.sh，以便适应你的网络环境。
3、安装VirtualBox，运行Windows XP操作系统，作为NAPT66内网主机。
请将虚拟机网卡改成Host-only模式。

二、搭建环境
1、在UBUNTU中安装必要的软件，
$ sudo apt-get install dnsmasq radvd ndisc6 bridge-utils subversion
dnsmasq用于IPv4 DHCP及DNS代理，radvd用于实现内网IPv6自动配置，ndisc6用于从外网获取路由器公告，subversion用来获取最新的NAPT66代码。由于VirtualBox提供了DHCP功能，我们不需要额外配置dnsmasq，只要安装好，它就可以提供DNS代理服务。
如果想用IPv6翻墙也很简单，在/etc/dnsmasq.conf中加入类似下面的语句就可以了。注意两行必须配套使用，否则会影响A记录的查询。
address=/www.google.com/2404:6800:8005::68
server=/www.google.com/#

2、通过自定义shell脚本增加slaac命令。
NAPT66要求开启Linux内核的IPv6转发功能，而一旦你这么做，内核就会丢弃所有的RA报文，无状态自动配置机制就失效了。不得已，我们只好写了个脚本，把无状态地址配置硬生生地改成有状态了。
将以下内容保存到/usr/sbin/slaac，并赋以执行权限chmod +x /usr/sbin/slaac。当你需要更新eth0的IPv6网络参数时，执行sudo slaac eth0即可。
#!/bin/sh
link_addr=$(ifconfig $1 | grep 'Scope:Link$' | awk '{ print $3}')
rdisc6 $1 -1 > /tmp/router_ad.tmp
cat /tmp/router_ad.tmp
prefix=$(cat /tmp/router_ad.tmp | grep '^ Prefix*' | awk -F ": " '{ print $2 }' | awk -F "/" '{ print $1 }')
ip6_addr=${prefix%*:}${link_addr##*::}
ip -6 addr add ${ip6_addr} dev $1

ip6_gw=$(cat /tmp/router_ad.tmp | grep '^ from' | awk '{ print $2 }')
ip -6 route add default via ${ip6_gw} dev $1

3、编译NAPT66。
下载NAPT66最新代码，并编译。
svn checkout http://napt66.googlecode.com/svn/trunk/ napt66-read-only
make

4、手动配置虚拟机WINXP的IPv4网络参数。
VirtualBox的Host-only模式只给虚拟机分配IP地址，却没有指定网关和DNS服务器。我喜欢把这两个参数设为10.0.0.1。你可以选择自己的Lucky number，但请注意要与up_napt66.sh里的参数一致，并保证虚拟机和主机的vboxnet0接口处于同网段。

三、启用
执行./up_napt66.sh wlan0 vboxnet0就可以启用双栈NAT，其中wlan0是外网接口，vboxnet0是内网接口。关闭功能也差不多，./down_napt66.sh wlan0 vboxnet0。

四、调试NAPT66
一般的问题可以通过printk()打印内核信息，用dmesg查看。但若错误很严重，系统死机了，就来不及看到调试信息，这时就得用另一台电脑远程调试了。双机调试可用串口或netconsole。Linus推荐在理解源代码的基础上调试。

许伟林
http://code.google.com/p/napt66
2011-9-23

附：
TODO列表
1. 地址转换表的同步与互斥
2. IPv6 DNAT

相关脚本
#############################up_napt66.sh##########################################
#!/bin/sh

if [ $# -ne 2 ] ; then
echo "Usage: $0 wan_interface lan_interface";
exit 1;
fi

wan_iface=$1
lan_iface=$2

#if lan_iface is down?
lan_iface_state=$(ip link show dev ${lan_iface}|grep 'state'|awk '{print $9}')
case $lan_iface_state in
	DOWN)
		echo "${lan_iface} is DOWN."
		exit 1
		;;
esac

sudo sysctl -w net.ipv4.ip_forward=1
#利用iptables实现IPv4 NAT
sudo iptables -t nat -A POSTROUTING -o $wan_iface -j MASQUERADE

#打开IPv6数据包转发
sudo sysctl -w net.ipv6.conf.all.forwarding=1
sleep 1
sudo slaac $wan_iface
sudo insmod /home/xuweilin/napt66/napt66-read-only/napt66.ko wan_if=$wan_iface

#lan_prefix=fd00:dead:beef:face::
lan_prefix=2010:dead:beef:face::
lan_gw=10.0.0.1

sudo ip -6 addr flush dev $lan_iface scope global
sudo ip addr flush dev $lan_iface scope global
sudo ip addr add ${lan_gw}/24 dev $lan_iface
sudo ip -6 addr add ${lan_prefix}1/64 dev $lan_iface

echo "
interface ${lan_iface}
{
	AdvSendAdvert on;
	MinRtrAdvInterval 5;
	MaxRtrAdvInterval 10;
	#以下两个参数就是以前提到的M和O标记，作用是通知内网计算机网络的地址配置方式
	AdvManagedFlag off;
	AdvOtherConfigFlag off;
	AdvDefaultPreference high;
	#前缀信息
	prefix ${lan_prefix}/64
	{
		AdvOnLink on;
		AdvAutonomous on;
		AdvRouterAddr on;
	};
	#DNS信息
	RDNSS ${lan_prefix}1
	{
		AdvRDNSSPreference 15;
		AdvRDNSSOpen on;
	};
};
" | sudo tee /etc/radvd.conf

sudo radvd &

#############################down_napt66.sh##########################################
#!/bin/sh

if [ $# -ne 2 ] ; then
echo "Usage: $0 wan_interface lan_interface";
exit 1;
fi

wan_iface=$1
lan_iface=$2

sudo killall radvd
sudo sysctl -w net.ipv4.ip_forward=0
#利用iptables实现IPv4 NAT
sudo iptables -t nat -D POSTROUTING -o $wan_iface -j MASQUERADE

#打开IPv6数据包转发

sudo sysctl -w net.ipv6.conf.all.forwarding=0
sudo ip -6 addr flush dev $wan_iface scope global
sudo ip -6 route flush dev $wan_iface
sudo slaac $wan_iface
sleep 1
sudo ip -6 addr flush dev $lan_iface scope global
sudo ip -6 route flush dev $lan_iface
sudo ip addr flush dev $lan_iface scope global
sudo rmmod napt66

#############################up_napt66.sh##########################################
#!/bin/sh
#isatap.bupt.edu.cn 
#211.68.71.43


isatap_server=211.68.71.43

if [ $# -ne 1 ] ; then
echo "Usage: $0 interface";
exit 1;
fi

iface=$1

#ifconfig $iface del 2001:da8:215:3320:223:aeff:fe5d:3b10/64
sudo ip -6 addr flush dev $iface scope global
sudo ip -6 route del dev $iface

iface_inet=$(ip addr show dev $iface scope global|grep "scope global ${iface}" | awk '{print $2}' | awk -F "/" '{print $1}')

#ip tunnel add sit1 mode sit ttl 128 remote 211.68.71.43 local 59.64.153.123
sudo ip tunnel add sit1 mode sit ttl 128 remote $isatap_server local $iface_inet
sudo ifconfig sit1 up
#ifconfig sit1 add 2001:da8:215:5200::5efe:59.64.153.123
sudo ifconfig sit1 add 2001:da8:215:5200::5efe:${iface_inet}
sudo ip -6 route add default dev sit1

echo "ISATAP tunnelling via ${iface} has been enabled."

#############################down_napt66.sh##########################################
#!/bin/sh
#isatap.bupt.edu.cn 
#211.68.71.43

if [ $# -ne 1 ] ; then
echo "Usage: $0 interface";
exit 1;
fi

iface=$1

sudo ip -6 route del dev sit1
sudo ifconfig sit1 down
sudo ip tunnel del sit1

sudo slaac $iface
echo "ISATAP tunnelling via ${iface} has been disabled."

#############################up_bridge.sh##########################################
#!/bin/sh

sudo brctl addbr br-lan
sudo brctl addif br-lan eth0
sudo ifconfig br-lan up
